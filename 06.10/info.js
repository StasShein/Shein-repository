let a = [10,20,30,40]

a.forEach((item,index,array) => {
    item *= 2
    console.log(item,index,array)
})

//фор ич это цикл для использования значений массива но не меняет значения, ничего ен возвращает

let arr = [10,20,30,40]

let b = arr.map((item,index,array)=>item*=2)

console.log(b)
//map это цикл для использования значений массива и он меняет значения

let c = arr.reduce((result,item,index,array)=>result + item,initialValue)//initialValue вместо него ставится значение которое будет начальным для результ

console.log(c)

//метод для суммирования, т.к. создает еще одну переменную результ
//возвращает одно результативное значение

arr.reduceRight((result,item,index,array)=>result + item,initialValue)//initialValue вместо него ставится значение которое будет начальным для результ

//действуетк как обычный редьюс, только он читает значение с права на лево

//способы поиска значение в массиве

arr.indexOf()//пишется знач которое ищем вернет его индекс, вернет первую цифру

arr.lastIndexOf()//пишем цифру если она повторяется то отправит последнюю такую цифру в массиве

arr.includes()//возвращает true and false есть такая цифра в массиве или нету

////////////////////////////////////

//метод для фильтрации значение внутри массива 

arr.filter((item,index,array)=>item % 3 === 0)

//метод для сортировки массива

let array = [20,40,10,30]

arr.sort((a,b)=>a-b)//отсортирует по возрастанию, еслии написать b-a то по убыванию

//для настраиваемой сортировки пишем функцию, потом можно менять под ситуацию

arr.sort((a,b)=>{
    if(a>b){
        return 1 //1 меняет местами
    }

    if(a<b){
        return -1 //-1 оставляет на месте
    }

    if(a===b){
        return 0 //0 оставляет на месте
    }
})

//прогоняет массив пока каждая пора не вернет -1